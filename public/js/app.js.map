{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["var Vue = require('vue');\nvar _ = require('lodash');\n\nVue.config.debug = true;\nVue.use(require('vue-resource'));\nVue.http.headers.common['X-CSRF-TOKEN'] = App.csrfToken;\n\nvar vm = new Vue({\n\n  el: 'body',\n\n  components: {\n    \"term-table\": require('./components/term-table/term-table'),\n    \"modal\": require('./components/modal/modal')\n  },\n\n  data: {\n    terms: [],\n    newTerm: {\n      name: '',\n      acronym: '',\n      definition: ''\n    }\n  },\n\n  ready: function() {\n    console.log('Vue ready!');\n\n  },\n\n  events: {\n    'load-terms': function() {\n      this.loadTerms();\n    },\n    //'create-term': function() {\n    //  console.log(arguments);\n    //},\n    'destroy-term': function(term) {\n      console.log('event::destroy-term');\n      this.destroyTerm(term);\n    }\n  },\n\n  methods: {\n    loadTerms: function() {\n      this.$http.get('/terms', function (data, status, request) {\n        console.log('terms response', status, data);\n\n        this.$set('terms', data);\n      })\n        .error(function (data, status, request) {\n        // handle error\n        console.log('Error!', status, data);\n      });\n    },\n\n    createTerm: function() {\n\n      var postData = {\n        name: this.$data.newTerm.name,\n        acronym: this.$data.newTerm.acronym,\n        definition: this.$data.newTerm.definition\n      };\n\n      this.$http.post('/term', postData, function(data, status, request) {\n        console.log('created successfully!', status, data);\n\n        if (data) {\n          this.$data.terms.push(data);\n\n          this.$data.newTerm = {\n            name: '',\n            acronym: '',\n            definition: ''\n          };\n        }\n      })\n        .error(function (data, status, request) {\n          // handle error\n          console.log('Error creating term!', status, data);\n        });\n    },\n\n    destroyTerm: function(term) {\n      if (window.confirm('Are you sure?')) {\n        this.$http.delete('/term/'+ term.id, function(data, status, request) {\n          console.log('deleting term', status, data);\n          this.removeTerm(term);\n        })\n          .error(function (data, status, request) {\n            // handle error\n            console.log('Error destroying term!', status, data);\n          });\n      }\n    },\n\n    removeTerm: function(term) {\n      for(var key in this.$data.terms) {\n        if (term.id == this.$data.terms[key].id) {\n          this.$data.terms.splice(key, 1);\n        }\n      }\n    }\n  }\n\n});"],"sourceRoot":"/source/"}